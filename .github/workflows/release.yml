name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  release:
    if: github.repository == 'quitsmx/test1'
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.10.0]

    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Check version changes
        uses: EndBug/version-check@v2
        id: check

      - name: Version update detection
        if: steps.check.outputs.changed == 'true'
        run: 'echo "Version change found! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'

      - name: Install pnpm
        if: steps.check.outputs.changed == 'true'
        uses: pnpm/action-setup@v4
        with:
          run_install: false
          # La versión de pnpm está en package.json#packageManager

      - name: Use Node.js ${{ matrix.node-version }}
        if: steps.check.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'

      - name: Install dependencies
        if: steps.check.outputs.changed == 'true'
        run: pnpm install --prod=true --frozen-lockfile

      - name: Publish GitHub Release
        if: steps.check.outputs.changed == 'true'
        uses: release-drafter/release-drafter@v6
        with:
          disable-autolabeler: true
          version: ${{ steps.check.outputs.version }}
          publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to NPM
        if: steps.check.outputs.changed == 'true'
        run: pnpm publish --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
